;==========================================================
;
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;
;
;   To learn more about how to configure Polybar
;   go to https://github.com/polybar/polybar
;
;   The README contains a lot of information
;
;==========================================================

[colors]

background = ${xrdb:color0:#222}
color1 = ${xrdb:color6}
color2 = ${xrdb:color1}
volbg = ${xrdb:color4}

;  _                    
; | |__   __ _ _ __ ___ 
; | '_ \ / _` | '__/ __|
; | |_) | (_| | |  \__ \
; |_.__/ \__,_|_|  |___/

[bar/base]
enable-ipc = true
font-0=NotoSansCJKJP:style=regular:size=16:antialias=true;5
font-1=MaterialDesignIcons:style=Regular:pixelsize=10:antialias=true;2
font-2=IPAGothic:style=Regular:size=11:antialias=true;3
font-3=MaterialDesignIcons:style=Bold:size=26:antialias=true;5
font-4=MaterialDesignIcons:style=Bold:size=21:antialias=true;5

bottom = false
border-size = 0
border-color = ${self.foreground}

height = 50

background = ${colors.background}
override-redirect=false
offset-y = 10

wm-restack = bspwm

[bar/ws]
inherit = bar/base
width = 18.65%
bottom = false

foreground = ${colors.color1}

offset-x = 32.9%

; bspwm
modules-left = stats bspwm apps
scroll-up = bspwm-desknext
scroll-down = bspwm-deskprev

[bar/music]
inherit = bar/base
enable-ipc = true
width = 25.5%

foreground = ${colors.color2}
offset-x = 10
; Spotify (uses playerctl)
modules-left = previous playpause next spotify
modules-right = spotlaunch

[bar/tray]
inherit = bar/base
width = 42.3%
offset-x = 56.9%
foreground = ${colors.color2}
modules-left = volbar wifi battery date time power


;                      _       _           
;  _ __ ___   ___   __| |_   _| | ___  ___ 
; | '_ ` _ \ / _ \ / _` | | | | |/ _ \/ __|
; | | | | | | (_) | (_| | |_| | |  __/\__ \
; |_| |_| |_|\___/ \__,_|\__,_|_|\___||___/
                                         
[module/xwindow]
type = internal/xwindow
label = %title:0:82:...%
label-foreground = ${colors.color1} 
label-background = ${colors.background} 
label-padding = 5


[module/bspwm]
type = internal/bspwm
pin-workspaces = true
format = <label-state>
format-padding = 5
format-background = ${colors.color1}
format-foreground = ${colors.background}
enable-click = true
enable-scroll = true
reverse-scroll = false

label-focused = 
label-focused-foreground = ${colors.background}
label-focused-padding = 1

label-empty = 
label-empty-padding = 1
label-empty-foreground = ${colors.background}

label-occupied = 
label-occupied-padding = 1
label-occupied-foreground = ${colors.background}

label-urgent = 
label-urgent-padding = 1
label-urgent-foreground = ${colors.background}


[module/battery]
type = internal/battery

; This is useful in case the battery never reports 100% charge
full-at = 99

; Use the following command to list batteries and adapters:
; $ ls -1 /sys/class/power_supply/
battery = BAT1
adapter = ADP1

; If an inotify event haven't been reported in this many
; seconds, manually poll for new values.
;
; Needed as a fallback for systems that don't report events
; on sysfs/procfs.
;
; Disable polling by setting the interval to 0.
;
; Default: 5
poll-interval = 5

; Available tags:
;   <label-charging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-charging>
format-charging = <animation-charging> <label-charging>
format-charging-padding = 5 

; Available tags:
;   <label-discharging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-discharging>
format-discharging = <ramp-capacity> <label-discharging>
format-discharging-padding = 5

; Available tags:
;   <label-full> (default)
;   <bar-capacity>
;   <ramp-capacity>
;format-full = <ramp-capacity> <label-full>

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current charge rate in watts)
label-charging = %percentage%%

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current discharge rate in watts)
label-discharging = %percentage%%

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
label-full = %percentage%%

; Only applies if <ramp-capacity> is used
ramp-capacity-0 = %{T5}%{T-}
ramp-capacity-1 = %{T5}%{T-}
ramp-capacity-2 = %{T5}%{T-}
ramp-capacity-3 = %{T5}%{T-}
ramp-capacity-4 = %{T5}%{T-}

; ; Only applies if <bar-capacity> is used
; bar-capacity-width = 10

; Only applies if <animation-charging> is used
animation-charging-0 = %{T5}%{T-}
animation-charging-1 = %{T5}%{T-}
animation-charging-2 = %{T5}%{T-}
animation-charging-3 = %{T5}%{T-}
animation-charging-4 = %{T5}%{T-}
; Framerate in milliseconds
animation-charging-framerate = 750

; ; Only applies if <animation-discharging> is used
; animation-discharging-0 = 
; animation-discharging-1 = 
; animation-discharging-2 = 
; animation-discharging-3 = 
; animation-discharging-4 = 
; ; Framerate in milliseconds
; animation-discharging-framerate = 500




[module/power]
type = custom/text
content = %{T4}%{T-}
click-left = "~/.config/rofi/powermenu/powermenu.sh"
content-padding = 5
content-foreground = ${colors.background}
content-background = ${colors.color2}


[module/apps]
type = custom/text
content = %{T4}%{T4}
content-foreground = ${colors.background}
content-background = ${colors.color1}
click-left = "~/.config/rofi/launcher/launcher.sh"
content-padding = 5


[module/date]
type = internal/date
interval = 10

label-foreground = ${colors.background}
label-background = ${colors.color2}

date = "%b. %d, %Y"

label = %date%
label-padding = 5


[module/time]
type = internal/date
interval = 10
format-foreground = ${colors.color2}

time = "%l:%M %p"

label = %time%
label-padding = 5


[module/wifi]
type = internal/network
interface = wlp107s0
interval = 10

format-disconnected = <label-disconnected>
label-disconnected = %{T5}%{T-}
label-disconnected-padding = 5
label-disconnected-foreground = ${colors.background}
label-disconnected-background = ${colors.color2}

format-connected = <label-connected>
label-connected = %{A1:nm-connection-editor:} %{T5}%{T-} %{A}
label-connected-padding = 5
label-connected-foreground = ${colors.background}
label-connected-background = ${colors.color2}


[module/stats]
type = custom/text
content = %{T4}%{T-}
content-foreground = ${colors.background}
content-background = ${colors.color1}
click-left = "gnome-system-monitor"
content-padding = 5


[module/volbar]
type = internal/alsa

format-volume = <label-volume> <bar-volume>
format-volume-padding = 5

label-volume = %{T4}   %{T-}
label-volume-foreground = ${colors.color2}

label-muted = %{T4}  %{T-} ─Muted─
label-muted-padding = 5

bar-volume-width = 10
bar-volume-gradient = false
bar-volume-indicator = %{T2}%{T-}
bar-volume-indicator-font = 5
bar-volume-fill = ─
bar-volume-fill-font = 5
bar-volume-empty = ─
bar-volume-empty-font = 5
bar-volume-empty-foreground = ${colors.volbg}


;Spotify modules

[module/previous]
type = custom/script
format-padding = 3
format-background = ${colors.color2}
format-foreground = ${colors.background}
exec = echo ""
label = %{T4}%output%%{T-}
exec-if = "pgrep spotify"
click-left = "playerctl previous"


[module/next]
type = custom/script
format-padding = 3
format-background = ${colors.color2}
format-foreground = ${colors.background}
exec = echo ""
label = %{T4}%output%%{T-}
exec-if = "pgrep spotify"
click-left = "playerctl next"


[module/playpause]
type = custom/script
exec = "$HOME/.config/polybar/tpm-cherryblocks/spotifystatus.sh"
label = %{T4}%output%%{T-}
exec-if = "pgrep spotify"
format-background = ${colors.color2}
format-foreground = ${colors.background}
tail = true
click-left = "playerctl -p spotify play-pause"


[module/spotify]
type = custom/script
exec =  playerctl -p spotify metadata --format '{{artist}} - {{title}}'
label = %output:0:20:...%
exec-if = "pgrep spotify"
format-padding = 3
tail = true
interval = 1


[module/spotlaunch]
type = custom/script
exec = echo ""
label = %{T4}%output%%{T-}
format-padding = 3
interval = 90
click-left = "jumpapp spotify"


[settings]
screenchange-reload = true
;compositing-background = xor
;compositing-background = screen
;compositing-foreground = source
;compositing-border = over
;pseudo-transparency = true


[global/wm]
margin-top = 0
margin-bottom = 0

; vim:ft=dosini
                      

